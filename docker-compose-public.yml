herder:
  image: palfrey/herder
  command: bash -c "./wait-for-postgres.sh postgres && ./boot prod-run"
  links:
    - postgres
  environment:
    - DATABASE_URL=postgres://postgres:mysecretpassword@postgres/postgres
    - PGPASSWORD=mysecretpassword
    - HTTP_PORT=3000
    - VIRTUAL_HOST=site.example.com
    - LETSENCRYPT_HOST=site.example.com
    - LETSENCRYPT_EMAIL=email@example.com
  ports:
    - "3000:3000"
postgres:
  image: postgres:9.4
  environment:
    - POSTGRES_PASSWORD=mysecretpassword
  ports:
    - "127.0.0.1:5432:5432"
nginx:
  image: nginx
  container_name: nginx
  ports:
    - "80:80"
    - "443:443"
  volumes:
    - "/etc/nginx/conf.d"
    - "/etc/nginx/vhost.d"
    - "/usr/share/nginx/html"
    - "./volumes/proxy/certs:/etc/nginx/certs:ro"
nginx-gen:
  image: jwilder/docker-gen
  container_name: nginx-gen
  volumes:
    - "/var/run/docker.sock:/tmp/docker.sock:ro"
    - "./volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
  volumes_from:
    - nginx
  command: -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
letsencrypt-nginx-proxy-companion:
  image: jrcs/letsencrypt-nginx-proxy-companion
  container_name: letsencrypt-nginx-proxy-companion
  volumes_from:
    - nginx
  volumes:
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    - "./volumes/proxy/certs:/etc/nginx/certs:rw"
  environment:
    - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
